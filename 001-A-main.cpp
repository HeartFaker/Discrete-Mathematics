#include<iostream>
using namespace std;

//定义逻辑运算类进行核心函数封装
class ProLogic {
public:
	//构造函数
	ProLogic(int a = -1, int b = -1) :P(a), Q(b) {};
	//合取
	bool Conjunction();
	//析取
	bool Extraction();
	//条件
	bool Condition();
	//双向条件
	bool Bicondition();
	//菜单与输入
	void MenuInput();
	//输出结果
	void Output();
private:
	//两个逻辑变量pq
	int P;
	int Q;
};

/***************************************************************************
  函数名称：Conjunction()
  功    能：求合取
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
bool ProLogic::Conjunction()
{
	return P && Q;
}

/***************************************************************************
  函数名称：Extraction()
  功    能：求析取
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
bool ProLogic::Extraction()
{
	return P || Q;
}


/***************************************************************************
  函数名称：Condition()
  功    能：求条件
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
bool ProLogic::Condition()
{
	return (!P) || Q;
}

/***************************************************************************
  函数名称：Bicondition()
  功    能：求双条件
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
bool ProLogic::Bicondition()
{
	return ((!P) || Q) && ((!Q) || P);
}

/***************************************************************************
  函数名称：MenuInput()
  功    能：打印菜单并输入pq
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
void ProLogic::MenuInput()
{
	cout << "***************************************" << endl; //标语
	cout << "** **" << endl;
	cout << "** 欢迎进入逻辑运算程序 **" << endl;
	cout << "** **" << endl;
	cout << "***************************************" << endl << endl;
	while (1) {
		cout << endl << " 请输入P的值（0或1）,以回车结束:";
		cin >> P;
		//进行错误处理
		if (!cin.good() || (P != 1 && P != 0)) {
			cin.clear();
			cin.ignore(2147483648, '\n');
			cout << endl << "P的值输入有误,请重新输入!";
			continue;
		}
		else {
			break;
		}
	}
	while (1) {
		cout << endl << " 请输入Q的值（0或1）,以回车结束:";
		cin >> Q;
		//进行错误处理
		if (!cin.good() || (Q != 1 && Q != 0)) {
			cin.clear();
			cin.ignore(2147483648, '\n');
			cout << endl << "Q的值输入有误,请重新输入!";
			continue;
		}
		else {
			break;
		}
	}
	return;
}

/***************************************************************************
  函数名称：Output()
  功    能：打印程序运行结果
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
void ProLogic::Output()
{
	cout << "\n\n  合取:\n       P/\\Q = "<< Conjunction() << endl;
	cout << "  析取:\n       P\\/Q = " << Extraction() << endl;
	cout << "  条件:\n       P->Q = " << Condition() << endl;
	cout << "  双条件:\n       P<->Q = " << Bicondition() << endl;
	return;
}

/***************************************************************************
  函数名称：main()
  功    能：主函数
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int main()
{
	ProLogic A;
	char s;
	while (1) {
		A.MenuInput();
		A.Output();
		while (1) {
			cout << endl << "是否继续运算?（y/n）";
			cin >> s;
			if (!cin.good() || (s != 'y' && s != 'n')) {
				cin.clear();
				cin.ignore(2147483648, '\n');
				cout << "输入错误,请重新输入!" << endl;
				continue;
			}
			else {
				break;
			}
		}
		if (s == 'y') {
			continue;
		}
		else if (s == 'n') {
			cout << "欢迎下次再次使用!" << endl;
			exit(0);
		}
	}
	return 0;
}